<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.jboss.seam.example</groupId>
    <artifactId>jboss-seam-booking</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <artifactId>jboss-seam-booking-ear</artifactId>
  <packaging>ear</packaging>

  <dependencies>
    <!-- Depend on the ejb module and war so that we can package them -->
    <dependency>
      <groupId>org.jboss.seam.example</groupId>
      <artifactId>jboss-seam-booking-web</artifactId>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.jboss.seam.example</groupId>
      <artifactId>jboss-seam-booking-ejb</artifactId>
      <type>ejb</type>
    </dependency>

    <dependency>
      <groupId>org.jboss.seam</groupId>
      <artifactId>jboss-seam</artifactId>
      <type>ejb</type>
      <exclusions>
        <exclusion>
          <groupId>javax.el</groupId>
          <artifactId>el-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jboss.el</groupId>
      <artifactId>jboss-el</artifactId>
      <version>1.0_02.CR6</version>
      <type>jar</type>
      <exclusions>
        <exclusion>
          <groupId>javax.el</groupId>
          <artifactId>el-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <version>1.6.1</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant-antlr</artifactId>
      <version>1.7.0</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>antlr</groupId>
      <artifactId>antlr</artifactId>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr-runtime</artifactId>
      <version>3.1.3</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>1.8.0</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2.1</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>bsh</groupId>
      <artifactId>bsh</artifactId>
      <version>2.0b4-patch-01</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
      <version>1.8.1</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-annotations</artifactId>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.richfaces.framework</groupId>
      <artifactId>richfaces-api</artifactId>
      <type>jar</type>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-ear-plugin</artifactId>
        <version>${version.ear.plugin}</version>
        <configuration>
          <!-- Tell Maven we are using Java EE 7 -->
          <version>7</version>
          <!-- Use Java EE ear libraries as needed. Java EE ear libraries 
            are in easy way to package any libraries needed in the ear, and automatically 
            have any modules (EJB-JARs and WARs) use them -->
          <generateApplicationXml>true</generateApplicationXml>
          <defaultLibBundleDir>lib</defaultLibBundleDir>
          <!-- <initializeInOrder>true</initializeInOrder> -->
          <modules>
            <jarModule>
              <groupId>org.jboss.el</groupId>
              <artifactId>jboss-el</artifactId>
              <includeInApplicationXml>false</includeInApplicationXml>
              <!-- <bundleDir>lib</bundleDir> -->
            </jarModule>
            <jarModule>
              <groupId>dom4j</groupId>
              <artifactId>dom4j</artifactId>
              <includeInApplicationXml>false</includeInApplicationXml>
            </jarModule>
            <jarModule>
              <groupId>org.apache.ant</groupId>
              <artifactId>ant-antlr</artifactId>
              <includeInApplicationXml>false</includeInApplicationXml>
            </jarModule>
            <jarModule>
              <groupId>antlr</groupId>
              <artifactId>antlr</artifactId>
              <includeInApplicationXml>false</includeInApplicationXml>
            </jarModule>
            <jarModule>
              <groupId>org.antlr</groupId>
              <artifactId>antlr-runtime</artifactId>
              <includeInApplicationXml>false</includeInApplicationXml>
            </jarModule>
            <jarModule>
              <groupId>bsh</groupId>
              <artifactId>bsh</artifactId>
              <includeInApplicationXml>false</includeInApplicationXml>
            </jarModule>
            <jarModule>
              <groupId>commons-beanutils</groupId>
              <artifactId>commons-beanutils</artifactId>
              <includeInApplicationXml>false</includeInApplicationXml>
            </jarModule>
            <jarModule>
              <groupId>commons-collections</groupId>
              <artifactId>commons-collections</artifactId>
              <includeInApplicationXml>false</includeInApplicationXml>
            </jarModule>
            <jarModule>
              <groupId>commons-digester</groupId>
              <artifactId>commons-digester</artifactId>
              <includeInApplicationXml>false</includeInApplicationXml>
            </jarModule>
            <jarModule>
              <groupId>commons-codec</groupId>
              <artifactId>commons-codec</artifactId>
              <includeInApplicationXml>false</includeInApplicationXml>
            </jarModule>
            <jarModule>
              <groupId>org.hibernate</groupId>
              <artifactId>hibernate-validator</artifactId>
              <includeInApplicationXml>false</includeInApplicationXml>
            </jarModule>
            <jarModule>
              <groupId>org.hibernate</groupId>
              <artifactId>hibernate-annotations</artifactId>
              <includeInApplicationXml>false</includeInApplicationXml>
            </jarModule>
            <jarModule>
              <groupId>org.richfaces.framework</groupId>
              <artifactId>richfaces-api</artifactId>
              <includeInApplicationXml>false</includeInApplicationXml>
            </jarModule>

            <ejbModule>
              <groupId>org.jboss.seam</groupId>
              <artifactId>jboss-seam</artifactId>
              <bundleFileName>jboss-seam.jar</bundleFileName>
            </ejbModule>
            <ejbModule>
              <groupId>org.jboss.seam.example</groupId>
              <artifactId>jboss-seam-booking-ejb</artifactId>
              <bundleFileName>jboss-seam-booking-ejb.jar</bundleFileName>
            </ejbModule>
            <webModule>
              <groupId>org.jboss.seam.example</groupId>
              <artifactId>jboss-seam-booking-web</artifactId>
              <bundleFileName>jboss-seam-booking-web.war</bundleFileName>
              <contextRoot>/seam-booking</contextRoot>
            </webModule>
          </modules>
        </configuration>
      </plugin>
      <!-- The WildFly plugin deploys your ear to a local WildFly container -->
      <!-- Due to Maven's lack of intelligence with EARs we need to configure 
        the wildfly maven plugin to skip deployment for all modules. We then enable 
        it specifically in the ear module. -->
      <plugin>
        <groupId>org.wildfly.plugins</groupId>
        <artifactId>wildfly-maven-plugin</artifactId>
        <configuration>
          <filename>${project.artifactId}.ear</filename>
          <skip>false</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>